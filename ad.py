import serial
import time
import cv2
import threading

# Bi·∫øn to√†n c·ª•c ƒë·ªÉ ki·ªÉm so√°t webcam
webcam_running = False
cap = None

def open_webcam():
    global webcam_running, cap
    cap = cv2.VideoCapture(0)

    if not cap.isOpened():
        print("Kh√¥ng th·ªÉ m·ªü webcam.")
        webcam_running = False
        return

    print("Webcam ƒëang ch·∫°y. Nh·∫•n n√∫t ƒë·ªÉ t·∫Øt.")
    webcam_running = True

    while webcam_running:
        ret, frame = cap.read()
        if not ret:
            print("Kh√¥ng th·ªÉ ƒë·ªçc frame.")
            break

        cv2.imshow("Webcam", frame)

        # Cho ph√©p t·∫Øt b·∫±ng ph√≠m 'q' (tu·ª≥ ch·ªçn)
        if cv2.waitKey(1) & 0xFF == ord('q'):
            break

    cap.release()
    cv2.destroyAllWindows()
    webcam_running = False

def close_webcam():
    global webcam_running
    if webcam_running:
        webcam_running = False
        print("ƒê√£ t·∫Øt webcam.")

def listen_to_arduino(port='COM3', baudrate=9600):
    try:
        ser = serial.Serial(port, baudrate, timeout=1)
        print(f"ƒêang k·∫øt n·ªëi ƒë·∫øn {port}...")
        time.sleep(2)

        while True:
            if ser.in_waiting:
                data = ser.readline().decode().strip()
                print(f"T√≠n hi·ªáu nh·∫≠n ƒë∆∞·ª£c: {data}")

                if data == "S" and not webcam_running:
                    # M·ªü webcam trong lu·ªìng ri√™ng ƒë·ªÉ kh√¥ng ch·∫∑n ƒë·ªçc serial
                    threading.Thread(target=open_webcam).start()
                elif data == "Q":
                    close_webcam()

    except serial.SerialException:
        print("Kh√¥ng th·ªÉ k·∫øt n·ªëi ƒë·∫øn Arduino. Ki·ªÉm tra c·ªïng COM.")
    except KeyboardInterrupt:
        print("ƒê√£ d·ª´ng ch∆∞∆°ng tr√¨nh.")
        close_webcam()

# üëâ Thay COM3 n·∫øu c·∫ßn
listen_to_arduino(port='COM3')
